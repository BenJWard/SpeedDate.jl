{
  "name": "SpeedDate.jl",
  "tagline": "A deliberately simply tool for the estimation of divergence times between DNA sequences.",
  "body": "# SpeedDate.jl\r\n\r\nA simple tool for the estimation of coalescence times between sequences.\r\nCreated with julia and [Bio.jl](https://github.com/BioJulia/Bio.jl)\r\n\r\n## Quick Start & Installation\r\n\r\n### A really quick start - Binder notebook\r\n\r\nIf you don't have or want to install julia or the package but still want to use\r\nthe funtionality of SpeedDate, then a Binder IPython/IJulia notebook cloud\r\nsession can be launched by clicking this: [![Binder](http://mybinder.org/badge.svg)](http://mybinder.org:/repo/ward9250/sd_binder)\r\n\r\n### Installation\r\n\r\nFirst you should have [julia installed](https://github.com/JuliaLang/julia).\r\n\r\nOpen a julia terminal and enter:\r\n\r\nEnter in a Julia terminal:\r\n```julia\r\nPkg.clone(\"https://github.com/Ward9250/SpeedDate.jl.git\")\r\n```\r\nTo download and install the master branch.\r\n\r\n### Useage\r\n\r\n#### On the command line:\r\n\r\nSpeedDate can be started from the command line by invoking the following line in\r\na terminal:\r\n\r\n```sh\r\njulia -e\"using SpeedDate; SpeedDate.main()\"\r\n```\r\n\r\nThe `compute` command is invoked to compute genetic distances and coalescence times\r\nfor an input aligned FASTA file. Use the -h flag to display the possible options\r\nfor the `compute` command:\r\n\r\n```\r\njulia -e\"using SpeedDate; SpeedDate.main()\" compute -h\r\n\r\nusage: <PROGRAM> compute [-f FILE] [-s [DNASEQS...]] [-m MODEL]\r\n                        [-r MUTATION_RATE] [--method METHOD]\r\n                        [-o OUTFILE] [--scan] [-w WIDTH] [-j STEP]\r\n                        [--onlydist] [-h]\r\n\r\noptional arguments:\r\n  -f, --file FILE       An input file.\r\n  -s, --dnaseqs [DNASEQS...]\r\n                        The first of two DNA sequences to test (type:\r\n                        Bio.Seq.BioSequence{Bio.Seq.DNAAlphabet{4}})\r\n  -m, --model MODEL     The model used to compute genetic distances.\r\n                        Currently jc69, and k80 are supported.\r\n                        (default: \"jc69\")\r\n  -r, --mutation_rate MUTATION_RATE\r\n                        The mutation rate to be assumed. (type:\r\n                        Float64, default: 1.0e-8)\r\n  --method METHOD       The dating method to use. Currently 'default'\r\n                        and 'simple' are supported.  (default:\r\n                        \"default\")\r\n  -o, --outfile OUTFILE\r\n                        Base name for the output files(s). (default:\r\n                        \"SpeedDate\")\r\n  --scan                Whether or not to compute dates across\r\n                        sequences with a sliding window.\r\n  -w, --width WIDTH     Width of the sliding window across sequences.\r\n                        (type: Int64, default: 100)\r\n  -j, --step STEP       The number of base pairs the sliding window\r\n                        moves by each iteration. (type: Int64,\r\n                        default: -1)\r\n  --onlydist\r\n  -h, --help            show this help message and exit\r\n```\r\n\r\n##### Using a GTK based GUI\r\n\r\nIf you use the `interactive` command instead of the `compute` command, you will\r\nbe presented with a GTK based graphical user interface.\r\n\r\n```\r\njulia -e\"using SpeedDate; SpeedDate.main()\" interactive\r\n```\r\n\r\n#### From inside a julia session.\r\nYou can execute the SpeedDate program from within a julia console session or\r\nscript. To do this, create a dictionary of arguments and then give that to the\r\n`SpeedDate.compute` function.\r\n\r\n```julia\r\nusing SpeedDate\r\n\r\noptions = Dict(\"model\" => \"jc69\",\r\n               \"mutation_rate\" => 10e-9,\r\n               \"method\" => \"default\",\r\n               \"scan\" => false,\r\n               \"onlydist\" => false,\r\n               \"file\" => \"contig1_ac.fas\",\r\n               \"outfile\" => \"test\")\r\n\r\nSpeedDate.compute(options)\r\n```\r\n\r\nThe dictionary should have the following fields:\r\n\r\n- \"model\" => Either \"jc69\" or \"k80\".\r\n- \"mutation_rate\" => A number representing the mutation rate, e.g. 10e-9.\r\n- \"file\" => A string that is the filename e.g. \"~/Desktop/myseqs.fasta\".\r\n- \"outfile\" => A string that is the basename of all output files.\r\n- \"method\" => Either \"default\" or \"simple\", I recommend leaving as \"default\".\r\n- \"onlydist\" => Set to true of false depending on whether or not you only want the distances to be computed.\r\n- \"scan\" => false.\r\n\r\nIf you want to do the sliding window scan, the following should also be added to\r\nthe dictionary:\r\n\r\n- \"scan\" => true\r\n- \"size\" => A number representing the sliding window size.\r\n- \"step\" => A number representing the sliding window step.\r\n\r\n_A note about unit tests, as SpeedDate essentially wraps Bio.jl functionality in a command line or GTK gui, no unit tests have been included yet, as the functions used have their own unit tests in the BioJulia project in which they are defined._\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}